name: Rustup

description: Install Rust with cache

inputs:
  # See https://rust-lang.github.io/rustup/concepts/components.html
  clippy:
    default: 'false'
    description: 'Install clippy'
    required: false
  fmt:
    default: 'false'
    description: 'Install rustfmt'
    required: false
  docs:
    default: 'false'
    description: 'Install rust-doc'
    required: false
  save-cache:
    default: 'false'
    description: 'Save cache if it was created'
    required: false
  shared-key:
    default: 'check'
    required: false
    description: 'The key to use for the cache'

runs:
  using: composite
  steps:
    - name: Print Inputs
      shell: bash
      run: |
        echo 'clippy: ${{ inputs.clippy }}'
        echo 'fmt: ${{ inputs.fmt }}'
        echo 'docs: ${{ inputs.docs }}'
        echo 'save-cache: ${{ inputs.save-cache }}'
        echo 'shared-key: ${{ inputs.shared-key }}'

    - name: Remove `profile` line on MacOS
      shell: bash
      if: runner.os == 'macOS'
      run: sed -i '' '/profile/d' rust-toolchain.toml

    - name: Remove `profile` line on non-MacOS
      shell: bash
      if: runner.os != 'macOS'
      run: sed -i '/profile/d' rust-toolchain.toml

    - name: Set minimal
      shell: bash
      run: rustup set profile minimal

    - name: Add Clippy
      shell: bash
      if: ${{ inputs.clippy == 'true' }}
      run: rustup component add clippy

    - name: Add Rustfmt
      shell: bash
      if: ${{ inputs.fmt == 'true' }}
      run: rustup component add rustfmt

    - name: Add docs
      shell: bash
      if: ${{ inputs.docs == 'true' }}
      run: rustup component add rust-docs

    - name: Install
      shell: bash
      run: rustup show

    - name: Cache on ${{ github.ref_name }}
      uses: Swatinem/rust-cache@v2
      with:
        shared-key: ${{ inputs.shared-key }}
        save-if: ${{ inputs.save-cache == 'true' }}
